# Copyright (C) 2023, Python training course authors and contributors
# This file is distributed under the same license as the Python Training
# Course package.
# OLEKSANDR YEROMIN <unicorn.in.pants@gmail.com>, 2023.
msgid ""
msgstr ""
"Project-Id-Version: Python Training Course 2022.11.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-05 19:49+0300\n"
"PO-Revision-Date: 2023-10-18 00:01+0300\n"
"Last-Translator: Serhii Horodilov <sgorodil@gmail.com>\n"
"Language-Team: \n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"Generated-By: Babel 2.13.0\n"
"X-Generator: Poedit 3.4\n"

#: ../../src/basics/variables.txt:-1
msgid "Variables in programming"
msgstr "Змінні в програмуванні"

#: ../../src/basics/variables.txt:-1
msgid "Serhii Horodilov"
msgstr "Serhii Horodilov"

#: ../../src/basics/variables.txt:-1
msgid "programming, basics, variables"
msgstr "programming, basics, variables"

#: ../../src/basics/variables.txt:8
msgid "Variables"
msgstr "Змінні"

#: ../../src/basics/variables.txt:10
msgid ""
"In computer science a **variable** is a named storage location in memory "
"that can hold a value (*data*). The value stored in a variable can be "
"changed or accessed by the program during its execution."
msgstr ""
"У комп'ютерних науках **змінна** - це іменована комірка пам'яті, яка може "
"зберігати значення (*дані*). Значення, що зберігається у змінній, може бути "
"змінене або доступне програмі під час її виконання."

#: ../../src/basics/variables.txt:14
msgid ""
"In Python, variables are created dynamically once a value is assigned to "
"them. This makes Python a dynamically typed language, which means that the "
"data type of a variable is inferred from the value assigned to it. So, you "
"do not need to declare a variable before using it, as in statically typed "
"languages."
msgstr ""
"У Python змінні створюються динамічно, щойно їм присвоюється значення. Це "
"робить Python динамічно типізованою мовою, що означає, що тип даних змінної "
"виводиться з присвоєного їй значення. Отже, вам не потрібно оголошувати "
"змінну перед її використанням, як у мовах зі статичною типізацією."

#: ../../src/basics/variables.txt:19
msgid ""
"The ability to create variables dynamically and infer their data type makes "
"Python code more concise and easier to read. However, it also requires "
"careful attention to variable naming and assignment to avoid unexpected "
"behavior."
msgstr ""
"Можливість динамічно створювати змінні та визначати тип їхніх даних робить "
"код Python лаконічнішим і легшим для читання. Однак, це також вимагає "
"ретельної уваги до іменування та присвоєння змінних, щоб уникнути "
"неочікуваної поведінки."

#: ../../src/basics/variables.txt:23
msgid ""
"In Python ``=`` (assignment operator) is used to set a value to some "
"variable, the portion on the left of the operator is a *variable name* and "
"the portion on the right is a *value* to assign to a variable."
msgstr ""
"У Python ``=`` (оператор присвоювання) використовується для присвоєння "
"значення деякій змінній, частина ліворуч від оператора - це *ім'я змінної*, "
"а частина праворуч - це *значення*, яке потрібно присвоїти змінній."

#: ../../src/basics/variables.txt:27
msgid "Variable assignment in Python"
msgstr "Присвоєння змінних у Python"

#: ../../src/basics/variables.txt:34
msgid "Variable assignment in Java"
msgstr "Присвоєння змінних у Java"

#: ../../src/basics/variables.txt:42
msgid "Naming"
msgstr "Іменування"

#: ../../src/basics/variables.txt:44
msgid ""
"In Python there are several rules that describe how to name your variables. "
"Some of these are requirements and cannot be ignored, others are rather "
"recommended than required and can be omitted. For now note, that a variable "
"name **cannot**:"
msgstr ""
"У Python є кілька правил, які описують, як називати ваші змінні. Деякі з них "
"є обов'язковими і не можуть бути проігноровані, інші є скоріше "
"рекомендаціями, і їх можна опустити. Наразі зауважте, що ім'я змінної **не "
"може**:"

#: ../../src/basics/variables.txt:49
msgid "a language keyword (like ``pass``, ``def`` or ``class``)"
msgstr "ключовим словом мови (наприклад, ``pass``, ``def`` або ``class``)"

#: ../../src/basics/variables.txt:50
msgid "start with a number (e.g. ``123``, ``1_something``)"
msgstr "починатись з числа (наприклад, ``123``, ``1_something``)"

#: ../../src/basics/variables.txt:51
msgid "contain special operators in it (``+``, ``-``, ``=`` etc.)"
msgstr "містити спеціальні оператори (``+``, ``-``, ``=`` тощо)."

#: ../../src/basics/variables.txt:52
msgid "contain white spaces"
msgstr "містити пробіли"

#: ../../src/basics/variables.txt:54
msgid "Also here are some general recommendation on naming anything:"
msgstr ""
"Також тут є кілька загальних рекомендацій щодо того, як називати будь-що:"

#: ../../src/basics/variables.txt:56
msgid "do not use built-in functions as a variable name (e.g. ``len = 42``)"
msgstr ""
"не використовуйте вбудовані функції як ім'я змінної (наприклад, ``len = 42``)"

#: ../../src/basics/variables.txt:57
msgid "keep names meaningful (``x = 10`` vs ``number_of_student = 100``)"
msgstr ""
"зберігайте змістовність імен (``x = 10`` проти ``number_of_student = 100``)"
