# Copyright (C) 2023, Python training course authors and contributors
# This file is distributed under the same license as the Python Training
# Course package.
# OLEKSANDR YEROMIN <unicorn.in.pants@gmail.com>, 2023.
msgid ""
msgstr ""
"Project-Id-Version: Python Training Course 2022.11.dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-05 19:49+0300\n"
"PO-Revision-Date: 2023-10-05 20:08+0300\n"
"Last-Translator: Serhii Horodilov <sgorodil@gmail.com>\n"
"Language-Team: \n"
"Language: uk\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=3; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && "
"n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2);\n"
"Generated-By: Babel 2.13.0\n"
"X-Generator: Poedit 3.4\n"

#: ../../src/basics/syntax.txt:-1
msgid "Python syntax"
msgstr "Синтаксис Python"

#: ../../src/basics/syntax.txt:-1
msgid "Serhii Horodilov"
msgstr "Serhii Horodilov"

#: ../../src/basics/syntax.txt:-1
msgid "python, basics, syntax"
msgstr "python, basics, syntax"

#: ../../src/basics/syntax.txt:8
msgid "Python Syntax"
msgstr "Синтаксис Python"

#: ../../src/basics/syntax.txt:10
msgid ""
"As a natural language like English or Ukrainian has its own rules to write "
"down something, programming languages do. This makes them programming "
"**languages**."
msgstr ""
"Оскільки природна мова, як-от англійська чи українська, має власні правила "
"запису чогось, так і мови програмування роблять схожі речі. Це і робить їх "
"мовами програмування."

#: ../../src/basics/syntax.txt:14
msgid ""
"A programming language syntax is the set of rules and principles that govern "
"how code is written and structured in a given programming language. Syntax "
"encompasses the rules for writing statements, expressions, variables, data "
"types, control structures, and other constructs that make up the language."
msgstr ""
"Синтаксис мови програмування - це набір правил і принципів, які регулюють "
"написання та структурування коду даною мовою програмування. Синтаксис "
"охоплює правила написання операторів, виразів, змінних, типів даних, "
"керуючих структур та інших конструкцій, які складають мову."

#: ../../src/basics/syntax.txt:19
msgid ""
"The syntax of a programming language defines how code is organized and "
"interpreted by a compiler or interpreter. It defines the rules for writing "
"valid statements and expressions that can be understood and executed by the "
"language's runtime system."
msgstr ""
"Синтаксис мови програмування визначає, як код організовується та "
"інтерпретується компілятором або інтерпретатором. Він визначає правила "
"написання дійсних операторів і виразів, які можуть бути зрозумілі та "
"виконані системою виконання мови."

#: ../../src/basics/syntax.txt:24
msgid ""
"A programming language's syntax is designed to be both readable and "
"expressive, allowing programmers to write code that is easy to understand "
"and modify. Syntax often influences the style and structure of code, as well "
"as its maintainability and performance."
msgstr ""
"Синтаксис мови програмування розроблено таким чином, щоб він був читабельним "
"і виразним, дозволяючи програмістам писати код, який легко зрозуміти та "
"змінювати. Синтаксис часто впливає на стиль і структуру коду, а також на "
"його зручність обслуговування та продуктивність."

#: ../../src/basics/syntax.txt:29
msgid ""
"Different programming languages have different syntax, with some languages "
"being more concise and expressive than others. While syntax is an important "
"aspect of a programming language, it is only one of several factors that "
"determine its ease of use, flexibility, and suitability for different "
"programming tasks."
msgstr ""
"Різні мови програмування мають різний синтаксис, при цьому деякі мови є "
"більш лаконічними та виразнішими, ніж інші. Хоча синтаксис є важливим "
"аспектом мови програмування, він є лише одним із кількох факторів, які "
"визначають її легкість у використанні, гнучкість і придатність для різних "
"завдань програмування."

#: ../../src/basics/syntax.txt:35
msgid ""
"In the case of Python, the language's syntax defines how code is written and "
"structured in a way that is consistent, readable, and easy to understand. A "
"general overview is provided below, no need to dive deep in this now. All of "
"the following is to be discussed during the course. So, some of the key "
"aspects of Python's syntax include:"
msgstr ""
"У випадку Python синтаксис мови визначає, як код буде написаний і "
"структурований таким чином, щоб він був послідовним, читабельним і легким "
"для розуміння. Нижче наведено загальний огляд, немає потреби глибоко "
"занурюватися в це зараз. Усе наведене нижче має бути обговорено під час "
"курсу. Отже, деякі з ключових аспектів синтаксису Python включають:"

#: ../../src/basics/syntax.txt
msgid "Indentation"
msgstr "Відступ"

#: ../../src/basics/syntax.txt:42
msgid ""
"Python uses whitespace, specifically indentation, to delimit blocks of code, "
"such as loops, conditionals, and functions. This means that the indentation "
"level of a line determines which block of code it belongs to."
msgstr ""
"Python використовує пробіли, зокрема відступи, для розмежування блоків коду, "
"таких як цикли, умови та функції. Це означає, що рівень відступу рядка "
"визначає, до якого блоку коду він належить."

#: ../../src/basics/syntax.txt
msgid "Statement structure"
msgstr "Структура коду"

#: ../../src/basics/syntax.txt:48
msgid ""
"Python statements are typically written on one line, with the end of the "
"line indicating the end of the statement. However, if a statement is too "
"long to fit on one line, it can be continued across multiple lines using "
"backslashes."
msgstr ""
"Інструкції Python зазвичай пишуться в один рядок, причому кінець рядка "
"вказує на кінець інструкції. Проте, якщо оператор занадто довгий, щоб "
"поміститися в один рядок, його можна продовжити в кількох рядках, "
"використовуючи зворотні похилі риски."

#: ../../src/basics/syntax.txt
msgid "Variables"
msgstr "Змінні"

#: ../../src/basics/syntax.txt:54
msgid ""
"In Python, variables are created automatically when a value is assigned to "
"them, and their type is inferred from the value. Variables can be assigned "
"values of different types, including integers, floats, strings, and more "
"complex data structures like lists and dictionaries."
msgstr ""
"У Python змінні створюються автоматично, якщо їм присвоюється значення, і "
"їхній тип визначається на основі значення. Змінним можна присвоювати "
"значення різних типів, включаючи цілі числа, числа з плаваючою комою, рядки "
"та складніші структури даних, такі як списки та словники."

#: ../../src/basics/syntax.txt
msgid "Operators"
msgstr "Оператори"

#: ../../src/basics/syntax.txt:60
msgid ""
"Python supports a wide range of operators for performing arithmetic, "
"comparison, and logical operations. These include arithmetic operators like "
"``+``, ``-``, ``*``, and ``/``, as well as comparison operators like ``<``, "
"``>``, ``==``, and ``!=``."
msgstr ""
"Python підтримує широкий спектр операторів для виконання арифметичних, "
"порівнянь і логічних операцій. До них належать арифметичні оператори, такі "
"як ``+``, ``-``, ``*`` і ``/``, а також оператори порівняння, такі як "
"``<`` , ``>``, ``==`` і ``!=``."

#: ../../src/basics/syntax.txt
msgid "Control flow"
msgstr "Контроль потоку"

#: ../../src/basics/syntax.txt:66
msgid ""
"Python provides control flow statements like if, else, elif, for, and while "
"to control the flow of execution in a program. These statements are used to "
"make decisions, repeat code, or perform actions based on conditions."
msgstr ""
"Python надає оператори потоку керування, як-от if, else, elif, for та while, "
"для керування потоком виконання в програмі. Ці оператори використовуються "
"для прийняття рішень, повторення коду або виконання дій на основі заданих "
"умов."

#: ../../src/basics/syntax.txt
msgid "Functions"
msgstr "Функції"

#: ../../src/basics/syntax.txt:72
msgid ""
"In Python, functions are defined using the def keyword and can take "
"arguments and return values. The body of a function is defined using a block "
"of indented code."
msgstr ""
"У Python функції визначаються за допомогою ключового слова def і можуть "
"отримувати аргументи та повертати значення. Тіло функції визначається за "
"допомогою блоку коду з відступами."

#: ../../src/basics/syntax.txt
msgid "Modules"
msgstr "Модулі"

#: ../../src/basics/syntax.txt:77
msgid ""
"Python has a large library of modules that provide pre-written code for a "
"variety of tasks. Modules can be imported into a program using the import "
"statement."
msgstr ""
"Python має велику бібліотеку модулів, які містять попередньо написаний код "
"для різноманітних завдань. Модулі можна імпортувати в програму за допомогою "
"оператора імпорту."

#: ../../src/basics/syntax.txt
msgid "Exception handling"
msgstr "Обробка винятків"

#: ../../src/basics/syntax.txt:82
msgid ""
"Python provides a way to handle errors and exceptions in a program using the "
"try, except, else, and finally keywords. These statements allow a program to "
"gracefully recover from errors and continue executing."
msgstr ""
"Python надає спосіб обробки помилок і винятків у програмі за допомогою "
"ключових слів try, except, else і finally. Ці оператори дозволяють програмі "
"плавно відновлюватися після помилок і продовжувати виконання."

#: ../../src/basics/syntax.txt:86
msgid "In few words:"
msgstr "У кількох словах:"

#: ../../src/basics/syntax.txt:88
msgid "Input/Output example script"
msgstr "Приклад сценарію Input/Output"

#: ../../src/basics/syntax.txt:107
msgid ""
"The code snippet above demonstrates some basics abilities of Python to "
"gather data from the user, process it and print out back. Note the words "
"starting with a # (hash) symbol. This is a comment. Any sequence of "
"characters after the hash and till the line end are considered to be a "
"comment. These are for those people, who see the code and they are ignored "
"by the interpreter."
msgstr ""
"Наведений вище фрагмент коду демонструє деякі основні можливості Python "
"збирати дані від користувача, обробляти їх і друкувати назад. Зверніть увагу "
"на слова, що починаються символом #(решітка). Це коментар. Будь-яка "
"послідовність символів після хеша і до кінця рядка вважається коментарем. Це "
"необхідно, щоб люди які бачать код могли його зрозуміти, при цьому "
"інтерпретатор їх ігнорує."

#: ../../src/basics/syntax.txt:113
msgid ""
"On the other hand each individual line is the instruction for the "
"interpreter to perform some action, like gather inputs, do math, store data "
"in memory etc."
msgstr ""
"З іншого боку, кожен окремий рядок є вказівкою для інтерпретатора виконати "
"певну дію, як-от збір вхідних даних, виконання математичних розрахунків, "
"збереження даних у пам'яті тощо."
